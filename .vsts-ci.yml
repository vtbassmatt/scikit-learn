
phases:

- phase: 'Linux'
  queue:
    name: 'Hosted Linux Preview'
    parallel: 1
    matrix:
      Python27:
        conda: false
        python.version: '2.7'
        cython.version: '0.23.5'
        coverage: true
      Python34Conda:
        conda: true
        python.version: '3.4'
        numpy.version: '1.10.4'
        scipy.version: '0.16.1'
        cython.version: '0.25.2'
        pillow.version: '4.0.0'
        install_mkl: false
        coverage: false
        run_flake8: false
        check_pytest_soft_dependency: true
        test_docstrings: true
      Python35Conda:
        conda: true
        python.version: '3.5'
        numpy.version: '1.13.1'
        scipy.version: '0.19.1'
        cython.version: '0.26.1'
        run_flake8: true
        skip_tests: true
        install_mkl: true
      Python36Conda:
        conda: true
        python.version: '3.6'
        numpy.version: '1.14.2'
        scipy.version: '1.0.0'
        pandas.version: '0.20.3'
        cython.version: '0.26.1'
        pyamg.version: '3.3.2'
        pillow.version: '4.3.0'
        coverage: true
        run_flake8: false
        check_pytest_soft_dependency: true
        test_docstrings: true
  
  variables:
    test_dir: '$(Build.BinariesDirectory)/_test'
    omp_num_threads: 4
    openblas_num_threads: 4

  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python $(python.version)'
      condition: eq(variables['conda'], false)
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: ./build_tools/vsts/conda.sh
      displayName: 'Setup Conda'
      condition: eq(variables['conda'], true)

    - script: ./build_tools/vsts/tools.sh
      displayName: 'Install tools'
      condition: or(eq(variables['coverage'], true), eq(variables['run_flake8'], true), eq(variables['test_docstrings'], true))

    - script: ./build_tools/vsts/build.sh
      displayName: 'Build'
    
    - script: ./build_tools/vsts/test.sh
      displayName: 'Test'
    
    - script: ./build_tools/vsts/codecov.sh
      displayName: 'Codecov prepare and upload'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results'
      inputs:
        summaryFileLocation: '$(Build.SourcesDirectory)/coverage.xml'
        codeCoverageTool: 'cobertura'


- phase: 'Windows'
  queue:
    name: 'Hosted VS2017'
    parallel: 1
    matrix:
      Python27:
        python.version: '2.7'
      # Python36:
      #   conda: true
      #   python.version: '3.6'
      Python37-dev:
        python.version: '>= 3.7.0a'

  steps:

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: python -m pip install -U pip setuptools wheel
      displayName: 'Update Python tools'
    
    - script: |
        python --version
        python -c "import struct; print(struct.calcsize('P') * 8)"
        pip --version
      displayName: 'Echo versions'
    
    - script: pip install --timeout=60 -r build_tools/vsts/requirements.txt"
      displayName: 'Install requirements'

    - powershell: |
        Invoke-WebRequest -Uri "https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi" -OutFile "VCForPython27.msi"
        msiexec VCForPython27.msi /qn
      displayName: 'Python 2.7-specific tools'
    
    - script: |
        python setup.py bdist_wheel bdist_wininst -b doc/logos/scikit-learn-logo.bmp
        pip install --pre --no-index --find-links dist/ scikit-learn
      displayName: 'Create and install dist'
    
    - script: |
        mkdir "../empty_folder"
        cd "../empty_folder"
        pytest --showlocals --durations=20 --pyargs sklearn
      displayName: Test

# TODO: Conda, artifacts, upload step, notification step